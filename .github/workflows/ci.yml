---
name: CI
"on":
  - pull_request
  - push
env:
  NAMESPACE: liyier90
  COLLECTION_NAME: conda

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checks out codebase
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install test dependencies
        run: pip3 install -r requirements-dev.txt

      - name: Lint code
        run: |
          yamllint .
          ansible-lint

  molecule:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - rockylinux9
          - rockylinux8
          - ubuntu2204
          - ubuntu2004
          - debian12
          - debian11
          - amazonlinux2023
    steps:
      - name: Checks out codebase
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install test dependencies
        run: pip3 install -r requirements-dev.txt

      - name: Run Molecule tests
        run: molecule test
        env:
          MOLECULE_DISTRO: ${{ matrix.os }}

  sanity:
    runs-on: ubuntu-latest
    steps:
      - name: Checks out codebase
        uses: actions/checkout@v4
        with:
          path: ansible_collections/${{ env.NAMESPACE }}/${{ env.COLLECTION_NAME }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install test dependencies
        run: |
          cd ansible_collections/$NAMESPACE/$COLLECTION_NAME
          pip3 install -r requirements-dev.txt

      - name: Run Ansible sanity tests
        run: |
          cd ansible_collections/$NAMESPACE/$COLLECTION_NAME
          ansible-test sanity

  units:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - fedora38
          - ubuntu2204
    steps:
      - name: Checks out codebase
        uses: actions/checkout@v4
        with:
          path: ansible_collections/${{ env.NAMESPACE }}/${{ env.COLLECTION_NAME }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install test dependencies
        run: |
          cd ansible_collections/$NAMESPACE/$COLLECTION_NAME
          pip3 install -r requirements-dev.txt

      - name: Run Ansible unit tests
        run: |
          cd ansible_collections/$NAMESPACE/$COLLECTION_NAME
          ansible-test units --docker ${{ matrix.os }}

  integration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - fedora38
          - ubuntu2204
    steps:
      - name: Checks out codebase
        uses: actions/checkout@v4
        with:
          path: ansible_collections/${{ env.NAMESPACE }}/${{ env.COLLECTION_NAME }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install test dependencies
        run: |
          cd ansible_collections/$NAMESPACE/$COLLECTION_NAME
          pip3 install -r requirements-dev.txt

      - name: Run Ansible integration tests
        run: |
          cd ansible_collections/$NAMESPACE/$COLLECTION_NAME
          ansible-test integration --docker ${{ matrix.os }}
